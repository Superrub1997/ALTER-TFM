/*
 * generated by Xtext 2.28.0
 */
grammar InternalArdsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ardsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ardsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ardsl.services.ArdslGrammarAccess;

}
@parser::members {
	private ArdslGrammarAccess grammarAccess;

	public void setGrammarAccess(ArdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleOntological
entryRuleOntological
:
{ before(grammarAccess.getOntologicalRule()); }
	 ruleOntological
{ after(grammarAccess.getOntologicalRule()); } 
	 EOF 
;

// Rule Ontological
ruleOntological 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOntologicalAccess().getGroup()); }
		(rule__Ontological__Group__0)
		{ after(grammarAccess.getOntologicalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__0__Impl
	rule__Ontological__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getGameKeyword_0()); }
	'Game'
	{ after(grammarAccess.getOntologicalAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__1__Impl
	rule__Ontological__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getNameAssignment_1()); }
	(rule__Ontological__NameAssignment_1)
	{ after(grammarAccess.getOntologicalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__2__Impl
	rule__Ontological__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__3__Impl
	rule__Ontological__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getGroup_3()); }
	(rule__Ontological__Group_3__0)?
	{ after(grammarAccess.getOntologicalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__4__Impl
	rule__Ontological__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getElementsKeyword_4()); }
	'elements'
	{ after(grammarAccess.getOntologicalAccess().getElementsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__5__Impl
	rule__Ontological__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__6__Impl
	rule__Ontological__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getClassesAssignment_6()); }
	(rule__Ontological__ClassesAssignment_6)
	{ after(grammarAccess.getOntologicalAccess().getClassesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__7__Impl
	rule__Ontological__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getGroup_7()); }
	(rule__Ontological__Group_7__0)*
	{ after(grammarAccess.getOntologicalAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__8__Impl
	rule__Ontological__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ontological__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group_3__0__Impl
	rule__Ontological__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getURIKeyword_3_0()); }
	'URI'
	{ after(grammarAccess.getOntologicalAccess().getURIKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getURIAssignment_3_1()); }
	(rule__Ontological__URIAssignment_3_1)
	{ after(grammarAccess.getOntologicalAccess().getURIAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ontological__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group_7__0__Impl
	rule__Ontological__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getOntologicalAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ontological__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntologicalAccess().getClassesAssignment_7_1()); }
	(rule__Ontological__ClassesAssignment_7_1)
	{ after(grammarAccess.getOntologicalAccess().getClassesAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getNameAssignment_0()); }
	(rule__Class__NameAssignment_0)
	{ after(grammarAccess.getClassAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getGroup_2()); }
	(rule__Class__Group_2__0)?
	{ after(grammarAccess.getClassAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getGroup_3()); }
	(rule__Class__Group_3__0)?
	{ after(grammarAccess.getClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAbstractAssignment_5()); }
	(rule__Class__AbstractAssignment_5)?
	{ after(grammarAccess.getClassAccess().getAbstractAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getNoSCNAssignment_6()); }
	(rule__Class__NoSCNAssignment_6)?
	{ after(grammarAccess.getClassAccess().getNoSCNAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAttributesAssignment_2_0()); }
	(rule__Class__AttributesAssignment_2_0)
	{ after(grammarAccess.getClassAccess().getAttributesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getGroup_2_1()); }
	(rule__Class__Group_2_1__0)*
	{ after(grammarAccess.getClassAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__0__Impl
	rule__Class__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getClassAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAttributesAssignment_2_1_1()); }
	(rule__Class__AttributesAssignment_2_1_1)
	{ after(grammarAccess.getClassAccess().getAttributesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3__0__Impl
	rule__Class__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getDependencesKeyword_3_0()); }
	'dependences'
	{ after(grammarAccess.getClassAccess().getDependencesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3__1__Impl
	rule__Class__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3__2__Impl
	rule__Class__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getReferencesAssignment_3_2()); }
	(rule__Class__ReferencesAssignment_3_2)
	{ after(grammarAccess.getClassAccess().getReferencesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3__3__Impl
	rule__Class__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getGroup_3_3()); }
	(rule__Class__Group_3_3__0)*
	{ after(grammarAccess.getClassAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3_3__0__Impl
	rule__Class__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getClassAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getReferencesAssignment_3_3_1()); }
	(rule__Class__ReferencesAssignment_3_3_1)
	{ after(grammarAccess.getClassAccess().getReferencesAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getMinAssignment_4()); }
	(rule__Attribute__MinAssignment_4)
	{ after(grammarAccess.getAttributeAccess().getMinAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__5__Impl
	rule__Attribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getAttributeAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__6__Impl
	rule__Attribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getMaxAssignment_6()); }
	(rule__Attribute__MaxAssignment_6)
	{ after(grammarAccess.getAttributeAccess().getMaxAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__7__Impl
	rule__Attribute__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__8__Impl
	rule__Attribute__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__9__Impl
	rule__Attribute__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDefaultAssignment_9()); }
	(rule__Attribute__DefaultAssignment_9)
	{ after(grammarAccess.getAttributeAccess().getDefaultAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__10__Impl
	rule__Attribute__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getIsParamAssignment_10()); }
	(rule__Attribute__IsParamAssignment_10)?
	{ after(grammarAccess.getAttributeAccess().getIsParamAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__11__Impl
	rule__Attribute__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getIsKeyAssignment_11()); }
	(rule__Attribute__IsKeyAssignment_11)?
	{ after(grammarAccess.getAttributeAccess().getIsKeyAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getReadOnlyAssignment_12()); }
	(rule__Attribute__ReadOnlyAssignment_12)?
	{ after(grammarAccess.getAttributeAccess().getReadOnlyAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getDependenceKeyword_0()); }
	'Dependence'
	{ after(grammarAccess.getReferenceAccess().getDependenceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
	(rule__Reference__NameAssignment_1)
	{ after(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getReferenceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__3__Impl
	rule__Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_3()); }
	(rule__Reference__Group_3__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__4__Impl
	rule__Reference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMinKeyword_4()); }
	'min'
	{ after(grammarAccess.getReferenceAccess().getMinKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__5__Impl
	rule__Reference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMinAssignment_5()); }
	(rule__Reference__MinAssignment_5)
	{ after(grammarAccess.getReferenceAccess().getMinAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__6__Impl
	rule__Reference__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMaxKeyword_6()); }
	'max'
	{ after(grammarAccess.getReferenceAccess().getMaxKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__7__Impl
	rule__Reference__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getMaxAssignment_7()); }
	(rule__Reference__MaxAssignment_7)
	{ after(grammarAccess.getReferenceAccess().getMaxAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__8__Impl
	rule__Reference__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getTargetKeyword_8()); }
	'target'
	{ after(grammarAccess.getReferenceAccess().getTargetKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__9__Impl
	rule__Reference__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getTargetAssignment_9()); }
	(rule__Reference__TargetAssignment_9)
	{ after(grammarAccess.getReferenceAccess().getTargetAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__10__Impl
	rule__Reference__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getGroup_10()); }
	(rule__Reference__Group_10__0)?
	{ after(grammarAccess.getReferenceAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getReferenceAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__0__Impl
	rule__Reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getContaintmentKeyword_3_0()); }
	'containtment'
	{ after(grammarAccess.getReferenceAccess().getContaintmentKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getContaintmentAssignment_3_1()); }
	(rule__Reference__ContaintmentAssignment_3_1)
	{ after(grammarAccess.getReferenceAccess().getContaintmentAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_10__0__Impl
	rule__Reference__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getOppositeKeyword_10_0()); }
	'opposite'
	{ after(grammarAccess.getReferenceAccess().getOppositeKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getOppositeAssignment_10_1()); }
	(rule__Reference__OppositeAssignment_10_1)
	{ after(grammarAccess.getReferenceAccess().getOppositeAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ontological__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntologicalAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getOntologicalAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__URIAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntologicalAccess().getURIEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getOntologicalAccess().getURIEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__ClassesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_6_0()); }
		ruleClass
		{ after(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ontological__ClassesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_7_1_0()); }
		ruleClass
		{ after(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getClassAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AttributesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AttributesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_1_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ReferencesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_2_0()); }
		ruleReference
		{ after(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ReferencesAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_3_1_0()); }
		ruleReference
		{ after(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AbstractAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0()); }
		(
			{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0()); }
			'abstract'
			{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0()); }
		)
		{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NoSCNAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0()); }
		(
			{ before(grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0()); }
			'invisible'
			{ after(grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0()); }
		)
		{ after(grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__MinAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getMinEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getMinEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__MaxAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getMaxEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getMaxEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DefaultAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getDefaultEStringParserRuleCall_9_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getDefaultEStringParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__IsParamAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0()); }
			'isParam'
			{ after(grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__IsKeyAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0()); }
			'isKey'
			{ after(grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ReadOnlyAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0()); }
			'readOnly'
			{ after(grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__ContaintmentAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getContaintmentEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getContaintmentEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__MinAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getMinEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getMinEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__MaxAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getMaxEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getMaxEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TargetAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getTargetEStringParserRuleCall_9_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getTargetEStringParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__OppositeAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getOppositeEStringParserRuleCall_10_1_0()); }
		ruleEString
		{ after(grammarAccess.getReferenceAccess().getOppositeEStringParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
