/*
 * generated by Xtext 2.28.0
 */
grammar InternalArdsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ardsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ardsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ardsl.services.ArdslGrammarAccess;

}

@parser::members {

 	private ArdslGrammarAccess grammarAccess;

    public InternalArdslParser(TokenStream input, ArdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Ontological";
   	}

   	@Override
   	protected ArdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOntological
entryRuleOntological returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOntologicalRule()); }
	iv_ruleOntological=ruleOntological
	{ $current=$iv_ruleOntological.current; }
	EOF;

// Rule Ontological
ruleOntological returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game'
		{
			newLeafNode(otherlv_0, grammarAccess.getOntologicalAccess().getGameKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='URI'
			{
				newLeafNode(otherlv_3, grammarAccess.getOntologicalAccess().getURIKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntologicalAccess().getURIEStringParserRuleCall_3_1_0());
					}
					lv_URI_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntologicalRule());
						}
						set(
							$current,
							"URI",
							lv_URI_4_0,
							"ardsl.Ardsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='elements'
		{
			newLeafNode(otherlv_5, grammarAccess.getOntologicalAccess().getElementsKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getOntologicalAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_6_0());
				}
				lv_classes_7_0=ruleClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntologicalRule());
					}
					add(
						$current,
						"classes",
						lv_classes_7_0,
						"ardsl.Ardsl.Class");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getOntologicalAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntologicalAccess().getClassesClassParserRuleCall_7_1_0());
					}
					lv_classes_9_0=ruleClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntologicalRule());
						}
						add(
							$current,
							"classes",
							lv_classes_9_0,
							"ardsl.Ardsl.Class");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getOntologicalAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_0_0());
					}
					lv_attributes_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_2_0,
							"ardsl.Ardsl.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getClassAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_2_1_1_0());
						}
						lv_attributes_4_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_4_0,
								"ardsl.Ardsl.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_5='dependences'
			{
				newLeafNode(otherlv_5, grammarAccess.getClassAccess().getDependencesKeyword_3_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_2_0());
					}
					lv_references_7_0=ruleReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassRule());
						}
						add(
							$current,
							"references",
							lv_references_7_0,
							"ardsl.Ardsl.Reference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getClassAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassAccess().getReferencesReferenceParserRuleCall_3_3_1_0());
						}
						lv_references_9_0=ruleReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassRule());
							}
							add(
								$current,
								"references",
								lv_references_9_0,
								"ardsl.Ardsl.Reference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				lv_abstract_12_0='abstract'
				{
					newLeafNode(lv_abstract_12_0, grammarAccess.getClassAccess().getAbstractAbstractKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassRule());
					}
					setWithLastConsumed($current, "abstract", lv_abstract_12_0 != null, "abstract");
				}
			)
		)?
		(
			(
				lv_noSCN_13_0='invisible'
				{
					newLeafNode(lv_noSCN_13_0, grammarAccess.getClassAccess().getNoSCNInvisibleKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassRule());
					}
					setWithLastConsumed($current, "noSCN", lv_noSCN_13_0 != null, "invisible");
				}
			)
		)?
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeEStringParserRuleCall_2_0());
				}
				lv_type_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getMinEStringParserRuleCall_4_0());
				}
				lv_min_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"min",
						lv_min_4_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getMaxEStringParserRuleCall_6_0());
				}
				lv_max_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"max",
						lv_max_6_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_7());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getDefaultEStringParserRuleCall_9_0());
				}
				lv_default_9_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"default",
						lv_default_9_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isParam_10_0='isParam'
				{
					newLeafNode(lv_isParam_10_0, grammarAccess.getAttributeAccess().getIsParamIsParamKeyword_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "isParam", lv_isParam_10_0 != null, "isParam");
				}
			)
		)?
		(
			(
				lv_isKey_11_0='isKey'
				{
					newLeafNode(lv_isKey_11_0, grammarAccess.getAttributeAccess().getIsKeyIsKeyKeyword_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "isKey", lv_isKey_11_0 != null, "isKey");
				}
			)
		)?
		(
			(
				lv_readOnly_12_0='readOnly'
				{
					newLeafNode(lv_readOnly_12_0, grammarAccess.getAttributeAccess().getReadOnlyReadOnlyKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "readOnly", lv_readOnly_12_0 != null, "readOnly");
				}
			)
		)?
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Dependence'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getDependenceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='containtment'
			{
				newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getContaintmentKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getContaintmentEStringParserRuleCall_3_1_0());
					}
					lv_containtment_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"containtment",
							lv_containtment_4_0,
							"ardsl.Ardsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='min'
		{
			newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getMinKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getMinEStringParserRuleCall_5_0());
				}
				lv_min_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"min",
						lv_min_6_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='max'
		{
			newLeafNode(otherlv_7, grammarAccess.getReferenceAccess().getMaxKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getMaxEStringParserRuleCall_7_0());
				}
				lv_max_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"max",
						lv_max_8_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='target'
		{
			newLeafNode(otherlv_9, grammarAccess.getReferenceAccess().getTargetKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getTargetEStringParserRuleCall_9_0());
				}
				lv_target_10_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"target",
						lv_target_10_0,
						"ardsl.Ardsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='opposite'
			{
				newLeafNode(otherlv_11, grammarAccess.getReferenceAccess().getOppositeKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceAccess().getOppositeEStringParserRuleCall_10_1_0());
					}
					lv_opposite_12_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceRule());
						}
						set(
							$current,
							"opposite",
							lv_opposite_12_0,
							"ardsl.Ardsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getReferenceAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
